---
# ------------------------------------------
- name: ASDF deps for deb
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  become: true
  ansible.builtin.apt:
    pkg:
      - htop
      - iotop
      # ------------------
      - git
      - curl
      - wget
      - unzip
- name: ASDF deps for Archlinux
  when: ansible_distribution == 'Archlinux'
  become: true
  community.general.pacman:
    name:
      - git
      - curl
      - wget
      - unzip
# sudo pacman --sync --refresh; sudo pacman --noconfirm --sync git curl wget unzip
# ------------------------------------------
- name: Install ASDF
  become: false
  ansible.builtin.shell: >
    git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.10.2 && echo ". $HOME/.asdf/asdf.sh" >> ~/.bashrc
  args:
    executable: /bin/bash
    chdir: "$HOME"
    creates: "$HOME/.asdf/asdf.sh"
  tags:
    - skip_ansible_lint
# ------------------------------------------
- name: ASDF Erlang deps for deb
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  become: true
  ansible.builtin.apt:
    pkg:
      - build-essential
      - autoconf
      - m4
      - libncurses5-dev
      - libgl1-mesa-dev
      - libglu1-mesa-dev
      - libpng-dev
      - libssh-dev
      - unixodbc-dev
      - xsltproc
      - fop
      - libxml2-utils
      - libncurses-dev
      - default-jre
- name: Install Debian specific Erlang deps
  when: ansible_distribution == 'Debian'
  become: true
  ansible.builtin.apt:
    pkg:
      - libwxgtk3.2-dev
      - libwxgtk-webview3.2-dev
- name: Install Ubuntu specific Erlang deps
  become: true
  when: ansible_distribution == 'Ubuntu'
  ansible.builtin.apt:
    pkg:
      - libwxgtk3.0-gtk3-dev
      - libwxgtk-webview3.0-gtk3-dev
- name: ASDF Erlang deps for Archlinux
  when: ansible_distribution == 'Archlinux'
  become: true
  community.general.pacman:
    name:
      - glibc
      - lib32-glibc
      - base-devel
      - ncurses
      - glu
      - mesa
      - wxwidgets-gtk3
      - libpng
      - libssh
      - unixodbc
      - libxslt
      - fop
# sudo pacman --noconfirm --sync base-devel ncurses glu mesa wxwidgets-gtk3 libpng libssh unixodbc libxslt fop
- name: Install erlang
  become: false
  ansible.builtin.shell: >
    /bin/bash -c ". $HOME/.asdf/asdf.sh && asdf plugin add erlang && asdf install erlang latest"
  args:
    executable: /bin/bash
    chdir: "{{ ansible_env.HOME }}"
    creates: "{{ ansible_env.HOME }}/.asdf/installs/erlang"
- name: Install elixir
  become: false
  ansible.builtin.shell: >
    /bin/bash -c ". $HOME/.asdf/asdf.sh && asdf plugin add elixir && asdf install elixir latest"
  args:
    executable: /bin/bash
    chdir: "{{ ansible_env.HOME }}"
    creates: "{{ ansible_env.HOME }}/.asdf/installs/elixir/"
# ------------------------------------------    
- name: Install Node.js
  become: false
  ansible.builtin.shell: >
    /bin/bash -c ". $HOME/.asdf/asdf.sh && asdf plugin add nodejs && asdf install nodejs latest"
  args:
    executable: /bin/bash
    chdir: "{{ ansible_env.HOME }}"
    creates: "{{ ansible_env.HOME }}/.asdf/installs/nodejs/"
# ------------------------------------------    
- name: ASDF Ruby deps for deb
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  become: true
  ansible.builtin.apt:
    pkg:
      - autoconf
      - patch
      - build-essential
      - rustc
      - libssl-dev
      - libyaml-dev
      - libreadline6-dev
      - zlib1g-dev
      - libgmp-dev 
      - libncurses5-dev
      - libffi-dev
      - libgdbm6
      - libgdbm-dev 
      - libdb-dev
      - uuid-dev
- name: ASDF Ruby deps for Archlinux
  when: ansible_distribution == 'Archlinux'
  become: true
  community.general.pacman:
    name:
      - base-devel
      - glibc
      - lib32-glibc
      - libyaml
# sudo pacman --noconfirm --sync which base-devel glibc lib32-glibc
- name: Install Ruby
  become: false
  ansible.builtin.shell: >
    /bin/bash -c ". $HOME/.asdf/asdf.sh && asdf plugin add ruby && asdf install ruby latest"
  args:
    executable: /bin/bash
    chdir: "{{ ansible_env.HOME }}"
    creates: "{{ ansible_env.HOME }}/.asdf/installs/ruby/"
